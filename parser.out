Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    DO
    ELSE
    FALSE
    FOR
    IF
    LBRACKET
    MINUSMINUS
    NOT
    PERIOD
    PLUSPLUS
    RBRACKET
    THEN
    TRUE
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM IDENTIFIER LCURLYBRACE vars block RCURLYBRACE
Rule 2     vars -> VAR varsp COLON type seentype SEMICOLON
Rule 3     vars -> VAR varsp COLON type seentype SEMICOLON vars
Rule 4     vars -> empty
Rule 5     varsp -> IDENTIFIER seenid
Rule 6     varsp -> IDENTIFIER seenid COMMA varsp
Rule 7     seenid -> <empty>
Rule 8     seentype -> <empty>
Rule 9     type -> INT
Rule 10    type -> REAL
Rule 11    type -> STRING
Rule 12    type -> BOOLEAN
Rule 13    block -> BEGIN SEMICOLON statement END SEMICOLON
Rule 14    statement -> empty
Rule 15    statement -> assign
Rule 16    statement -> assign statement
Rule 17    statement -> writefunction
Rule 18    statement -> writefunction statement
Rule 19    assign -> IDENTIFIER ASSIGNOP expression assignnow SEMICOLON
Rule 20    assignnow -> <empty>
Rule 21    expression -> simpleexpression
Rule 22    expression -> simpleexpression LESS_THAN seenoperator simpleexpression genquad
Rule 23    expression -> simpleexpression LESS_THAN_EQUALS seenoperator simpleexpression genquad
Rule 24    expression -> simpleexpression GREATER_THAN seenoperator simpleexpression genquad
Rule 25    expression -> simpleexpression GREATER_THAN_EQUALS seenoperator simpleexpression genquad
Rule 26    expression -> simpleexpression NOT_EQUALS seenoperator simpleexpression genquad
Rule 27    expression -> simpleexpression EQUALS seenoperator simpleexpression genquad
Rule 28    simpleexpression -> term seenterm simpleexpressionp
Rule 29    seenterm -> <empty>
Rule 30    simpleexpressionp -> empty
Rule 31    simpleexpressionp -> PLUS seenoperator simpleexpression
Rule 32    simpleexpressionp -> MINUS seenoperator simpleexpression
Rule 33    simpleexpressionp -> OR seenoperator simpleexpression
Rule 34    term -> factor seenfactor termp
Rule 35    termp -> empty
Rule 36    termp -> MULTIPLY seenoperator term
Rule 37    termp -> DIV seenoperator term
Rule 38    termp -> DIVIDE seenoperator term
Rule 39    termp -> MOD seenoperator term
Rule 40    termp -> AND seenoperator term
Rule 41    seenoperator -> <empty>
Rule 42    seenfactor -> <empty>
Rule 43    genquad -> <empty>
Rule 44    factor -> const
Rule 45    factor -> LPAREN expression RPAREN
Rule 46    const -> PLUS IDENTIFIER
Rule 47    const -> MINUS IDENTIFIER
Rule 48    const -> IDENTIFIER
Rule 49    const -> PLUS NUMBER_CONST
Rule 50    const -> MINUS NUMBER_CONST
Rule 51    const -> NUMBER_CONST
Rule 52    const -> STRING_CONST
Rule 53    writefunction -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 54    writefunction -> WRITE LPAREN expression RPAREN SEMICOLON
Rule 55    empty -> <empty>

Terminals, with rules where they appear

AND                  : 40
ASSIGNOP             : 19
BEGIN                : 13
BOOLEAN              : 12
CHAR                 : 
COLON                : 2 3
COMMA                : 6
DIV                  : 37
DIVIDE               : 38
DO                   : 
ELSE                 : 
END                  : 13
EQUALS               : 27
FALSE                : 
FOR                  : 
GREATER_THAN         : 24
GREATER_THAN_EQUALS  : 25
IDENTIFIER           : 1 5 6 19 46 47 48
IF                   : 
INT                  : 9
LBRACKET             : 
LCURLYBRACE          : 1
LESS_THAN            : 22
LESS_THAN_EQUALS     : 23
LPAREN               : 45 53 54
MINUS                : 32 47 50
MINUSMINUS           : 
MOD                  : 39
MULTIPLY             : 36
NOT                  : 
NOT_EQUALS           : 26
NUMBER_CONST         : 49 50 51
OR                   : 33
PERIOD               : 
PLUS                 : 31 46 49
PLUSPLUS             : 
PRINT                : 53
PROGRAM              : 1
RBRACKET             : 
RCURLYBRACE          : 1
REAL                 : 10
RPAREN               : 45 53 54
SEMICOLON            : 2 3 13 13 19 53 54
STRING               : 11
STRING_CONST         : 52
THEN                 : 
TRUE                 : 
VAR                  : 2 3
WHILE                : 
WRITE                : 54
error                : 

Nonterminals, with rules where they appear

assign               : 15 16
assignnow            : 19
block                : 1
const                : 44
empty                : 4 14 30 35
expression           : 19 45 53 54
factor               : 34
genquad              : 22 23 24 25 26 27
program              : 0
seenfactor           : 34
seenid               : 5 6
seenoperator         : 22 23 24 25 26 27 31 32 33 36 37 38 39 40
seenterm             : 28
seentype             : 2 3
simpleexpression     : 21 22 22 23 23 24 24 25 25 26 26 27 27 31 32 33
simpleexpressionp    : 28
statement            : 13 16 18
term                 : 28 36 37 38 39 40
termp                : 34
type                 : 2 3
vars                 : 1 3
varsp                : 2 3 6
writefunction        : 17 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM IDENTIFIER LCURLYBRACE vars block RCURLYBRACE

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . IDENTIFIER LCURLYBRACE vars block RCURLYBRACE

    IDENTIFIER      shift and go to state 3


state 3

    (1) program -> PROGRAM IDENTIFIER . LCURLYBRACE vars block RCURLYBRACE

    LCURLYBRACE     shift and go to state 4


state 4

    (1) program -> PROGRAM IDENTIFIER LCURLYBRACE . vars block RCURLYBRACE
    (2) vars -> . VAR varsp COLON type seentype SEMICOLON
    (3) vars -> . VAR varsp COLON type seentype SEMICOLON vars
    (4) vars -> . empty
    (55) empty -> .

    VAR             shift and go to state 6
    BEGIN           reduce using rule 55 (empty -> .)

    vars                           shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM IDENTIFIER LCURLYBRACE vars . block RCURLYBRACE
    (13) block -> . BEGIN SEMICOLON statement END SEMICOLON

    BEGIN           shift and go to state 9

    block                          shift and go to state 8

state 6

    (2) vars -> VAR . varsp COLON type seentype SEMICOLON
    (3) vars -> VAR . varsp COLON type seentype SEMICOLON vars
    (5) varsp -> . IDENTIFIER seenid
    (6) varsp -> . IDENTIFIER seenid COMMA varsp

    IDENTIFIER      shift and go to state 11

    varsp                          shift and go to state 10

state 7

    (4) vars -> empty .

    BEGIN           reduce using rule 4 (vars -> empty .)


state 8

    (1) program -> PROGRAM IDENTIFIER LCURLYBRACE vars block . RCURLYBRACE

    RCURLYBRACE     shift and go to state 12


state 9

    (13) block -> BEGIN . SEMICOLON statement END SEMICOLON

    SEMICOLON       shift and go to state 13


state 10

    (2) vars -> VAR varsp . COLON type seentype SEMICOLON
    (3) vars -> VAR varsp . COLON type seentype SEMICOLON vars

    COLON           shift and go to state 14


state 11

    (5) varsp -> IDENTIFIER . seenid
    (6) varsp -> IDENTIFIER . seenid COMMA varsp
    (7) seenid -> .

    COMMA           reduce using rule 7 (seenid -> .)
    COLON           reduce using rule 7 (seenid -> .)

    seenid                         shift and go to state 15

state 12

    (1) program -> PROGRAM IDENTIFIER LCURLYBRACE vars block RCURLYBRACE .

    $end            reduce using rule 1 (program -> PROGRAM IDENTIFIER LCURLYBRACE vars block RCURLYBRACE .)


state 13

    (13) block -> BEGIN SEMICOLON . statement END SEMICOLON
    (14) statement -> . empty
    (15) statement -> . assign
    (16) statement -> . assign statement
    (17) statement -> . writefunction
    (18) statement -> . writefunction statement
    (55) empty -> .
    (19) assign -> . IDENTIFIER ASSIGNOP expression assignnow SEMICOLON
    (53) writefunction -> . PRINT LPAREN expression RPAREN SEMICOLON
    (54) writefunction -> . WRITE LPAREN expression RPAREN SEMICOLON

    END             reduce using rule 55 (empty -> .)
    IDENTIFIER      shift and go to state 20
    PRINT           shift and go to state 21
    WRITE           shift and go to state 22

    statement                      shift and go to state 16
    empty                          shift and go to state 17
    assign                         shift and go to state 18
    writefunction                  shift and go to state 19

state 14

    (2) vars -> VAR varsp COLON . type seentype SEMICOLON
    (3) vars -> VAR varsp COLON . type seentype SEMICOLON vars
    (9) type -> . INT
    (10) type -> . REAL
    (11) type -> . STRING
    (12) type -> . BOOLEAN

    INT             shift and go to state 24
    REAL            shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27

    type                           shift and go to state 23

state 15

    (5) varsp -> IDENTIFIER seenid .
    (6) varsp -> IDENTIFIER seenid . COMMA varsp

    COLON           reduce using rule 5 (varsp -> IDENTIFIER seenid .)
    COMMA           shift and go to state 28


state 16

    (13) block -> BEGIN SEMICOLON statement . END SEMICOLON

    END             shift and go to state 29


state 17

    (14) statement -> empty .

    END             reduce using rule 14 (statement -> empty .)


state 18

    (15) statement -> assign .
    (16) statement -> assign . statement
    (14) statement -> . empty
    (15) statement -> . assign
    (16) statement -> . assign statement
    (17) statement -> . writefunction
    (18) statement -> . writefunction statement
    (55) empty -> .
    (19) assign -> . IDENTIFIER ASSIGNOP expression assignnow SEMICOLON
    (53) writefunction -> . PRINT LPAREN expression RPAREN SEMICOLON
    (54) writefunction -> . WRITE LPAREN expression RPAREN SEMICOLON

  ! reduce/reduce conflict for END resolved using rule 15 (statement -> assign .)
    END             reduce using rule 15 (statement -> assign .)
    IDENTIFIER      shift and go to state 20
    PRINT           shift and go to state 21
    WRITE           shift and go to state 22

  ! END             [ reduce using rule 55 (empty -> .) ]

    assign                         shift and go to state 18
    statement                      shift and go to state 30
    empty                          shift and go to state 17
    writefunction                  shift and go to state 19

state 19

    (17) statement -> writefunction .
    (18) statement -> writefunction . statement
    (14) statement -> . empty
    (15) statement -> . assign
    (16) statement -> . assign statement
    (17) statement -> . writefunction
    (18) statement -> . writefunction statement
    (55) empty -> .
    (19) assign -> . IDENTIFIER ASSIGNOP expression assignnow SEMICOLON
    (53) writefunction -> . PRINT LPAREN expression RPAREN SEMICOLON
    (54) writefunction -> . WRITE LPAREN expression RPAREN SEMICOLON

  ! reduce/reduce conflict for END resolved using rule 17 (statement -> writefunction .)
    END             reduce using rule 17 (statement -> writefunction .)
    IDENTIFIER      shift and go to state 20
    PRINT           shift and go to state 21
    WRITE           shift and go to state 22

  ! END             [ reduce using rule 55 (empty -> .) ]

    writefunction                  shift and go to state 19
    statement                      shift and go to state 31
    empty                          shift and go to state 17
    assign                         shift and go to state 18

state 20

    (19) assign -> IDENTIFIER . ASSIGNOP expression assignnow SEMICOLON

    ASSIGNOP        shift and go to state 32


state 21

    (53) writefunction -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 33


state 22

    (54) writefunction -> WRITE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 34


state 23

    (2) vars -> VAR varsp COLON type . seentype SEMICOLON
    (3) vars -> VAR varsp COLON type . seentype SEMICOLON vars
    (8) seentype -> .

    SEMICOLON       reduce using rule 8 (seentype -> .)

    seentype                       shift and go to state 35

state 24

    (9) type -> INT .

    SEMICOLON       reduce using rule 9 (type -> INT .)


state 25

    (10) type -> REAL .

    SEMICOLON       reduce using rule 10 (type -> REAL .)


state 26

    (11) type -> STRING .

    SEMICOLON       reduce using rule 11 (type -> STRING .)


state 27

    (12) type -> BOOLEAN .

    SEMICOLON       reduce using rule 12 (type -> BOOLEAN .)


state 28

    (6) varsp -> IDENTIFIER seenid COMMA . varsp
    (5) varsp -> . IDENTIFIER seenid
    (6) varsp -> . IDENTIFIER seenid COMMA varsp

    IDENTIFIER      shift and go to state 11

    varsp                          shift and go to state 36

state 29

    (13) block -> BEGIN SEMICOLON statement END . SEMICOLON

    SEMICOLON       shift and go to state 37


state 30

    (16) statement -> assign statement .

    END             reduce using rule 16 (statement -> assign statement .)


state 31

    (18) statement -> writefunction statement .

    END             reduce using rule 18 (statement -> writefunction statement .)


state 32

    (19) assign -> IDENTIFIER ASSIGNOP . expression assignnow SEMICOLON
    (21) expression -> . simpleexpression
    (22) expression -> . simpleexpression LESS_THAN seenoperator simpleexpression genquad
    (23) expression -> . simpleexpression LESS_THAN_EQUALS seenoperator simpleexpression genquad
    (24) expression -> . simpleexpression GREATER_THAN seenoperator simpleexpression genquad
    (25) expression -> . simpleexpression GREATER_THAN_EQUALS seenoperator simpleexpression genquad
    (26) expression -> . simpleexpression NOT_EQUALS seenoperator simpleexpression genquad
    (27) expression -> . simpleexpression EQUALS seenoperator simpleexpression genquad
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    expression                     shift and go to state 39
    simpleexpression               shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 33

    (53) writefunction -> PRINT LPAREN . expression RPAREN SEMICOLON
    (21) expression -> . simpleexpression
    (22) expression -> . simpleexpression LESS_THAN seenoperator simpleexpression genquad
    (23) expression -> . simpleexpression LESS_THAN_EQUALS seenoperator simpleexpression genquad
    (24) expression -> . simpleexpression GREATER_THAN seenoperator simpleexpression genquad
    (25) expression -> . simpleexpression GREATER_THAN_EQUALS seenoperator simpleexpression genquad
    (26) expression -> . simpleexpression NOT_EQUALS seenoperator simpleexpression genquad
    (27) expression -> . simpleexpression EQUALS seenoperator simpleexpression genquad
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    expression                     shift and go to state 49
    simpleexpression               shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 34

    (54) writefunction -> WRITE LPAREN . expression RPAREN SEMICOLON
    (21) expression -> . simpleexpression
    (22) expression -> . simpleexpression LESS_THAN seenoperator simpleexpression genquad
    (23) expression -> . simpleexpression LESS_THAN_EQUALS seenoperator simpleexpression genquad
    (24) expression -> . simpleexpression GREATER_THAN seenoperator simpleexpression genquad
    (25) expression -> . simpleexpression GREATER_THAN_EQUALS seenoperator simpleexpression genquad
    (26) expression -> . simpleexpression NOT_EQUALS seenoperator simpleexpression genquad
    (27) expression -> . simpleexpression EQUALS seenoperator simpleexpression genquad
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    expression                     shift and go to state 50
    simpleexpression               shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 35

    (2) vars -> VAR varsp COLON type seentype . SEMICOLON
    (3) vars -> VAR varsp COLON type seentype . SEMICOLON vars

    SEMICOLON       shift and go to state 51


state 36

    (6) varsp -> IDENTIFIER seenid COMMA varsp .

    COLON           reduce using rule 6 (varsp -> IDENTIFIER seenid COMMA varsp .)


state 37

    (13) block -> BEGIN SEMICOLON statement END SEMICOLON .

    RCURLYBRACE     reduce using rule 13 (block -> BEGIN SEMICOLON statement END SEMICOLON .)


state 38

    (48) const -> IDENTIFIER .

    MULTIPLY        reduce using rule 48 (const -> IDENTIFIER .)
    DIV             reduce using rule 48 (const -> IDENTIFIER .)
    DIVIDE          reduce using rule 48 (const -> IDENTIFIER .)
    MOD             reduce using rule 48 (const -> IDENTIFIER .)
    AND             reduce using rule 48 (const -> IDENTIFIER .)
    PLUS            reduce using rule 48 (const -> IDENTIFIER .)
    MINUS           reduce using rule 48 (const -> IDENTIFIER .)
    OR              reduce using rule 48 (const -> IDENTIFIER .)
    LESS_THAN       reduce using rule 48 (const -> IDENTIFIER .)
    LESS_THAN_EQUALS reduce using rule 48 (const -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 48 (const -> IDENTIFIER .)
    GREATER_THAN_EQUALS reduce using rule 48 (const -> IDENTIFIER .)
    NOT_EQUALS      reduce using rule 48 (const -> IDENTIFIER .)
    EQUALS          reduce using rule 48 (const -> IDENTIFIER .)
    SEMICOLON       reduce using rule 48 (const -> IDENTIFIER .)
    RPAREN          reduce using rule 48 (const -> IDENTIFIER .)


state 39

    (19) assign -> IDENTIFIER ASSIGNOP expression . assignnow SEMICOLON
    (20) assignnow -> .

    SEMICOLON       reduce using rule 20 (assignnow -> .)

    assignnow                      shift and go to state 52

state 40

    (21) expression -> simpleexpression .
    (22) expression -> simpleexpression . LESS_THAN seenoperator simpleexpression genquad
    (23) expression -> simpleexpression . LESS_THAN_EQUALS seenoperator simpleexpression genquad
    (24) expression -> simpleexpression . GREATER_THAN seenoperator simpleexpression genquad
    (25) expression -> simpleexpression . GREATER_THAN_EQUALS seenoperator simpleexpression genquad
    (26) expression -> simpleexpression . NOT_EQUALS seenoperator simpleexpression genquad
    (27) expression -> simpleexpression . EQUALS seenoperator simpleexpression genquad

    SEMICOLON       reduce using rule 21 (expression -> simpleexpression .)
    RPAREN          reduce using rule 21 (expression -> simpleexpression .)
    LESS_THAN       shift and go to state 53
    LESS_THAN_EQUALS shift and go to state 54
    GREATER_THAN    shift and go to state 55
    GREATER_THAN_EQUALS shift and go to state 56
    NOT_EQUALS      shift and go to state 57
    EQUALS          shift and go to state 58


state 41

    (28) simpleexpression -> term . seenterm simpleexpressionp
    (29) seenterm -> .

    PLUS            reduce using rule 29 (seenterm -> .)
    MINUS           reduce using rule 29 (seenterm -> .)
    OR              reduce using rule 29 (seenterm -> .)
    LESS_THAN       reduce using rule 29 (seenterm -> .)
    LESS_THAN_EQUALS reduce using rule 29 (seenterm -> .)
    GREATER_THAN    reduce using rule 29 (seenterm -> .)
    GREATER_THAN_EQUALS reduce using rule 29 (seenterm -> .)
    NOT_EQUALS      reduce using rule 29 (seenterm -> .)
    EQUALS          reduce using rule 29 (seenterm -> .)
    SEMICOLON       reduce using rule 29 (seenterm -> .)
    RPAREN          reduce using rule 29 (seenterm -> .)

    seenterm                       shift and go to state 59

state 42

    (34) term -> factor . seenfactor termp
    (42) seenfactor -> .

    MULTIPLY        reduce using rule 42 (seenfactor -> .)
    DIV             reduce using rule 42 (seenfactor -> .)
    DIVIDE          reduce using rule 42 (seenfactor -> .)
    MOD             reduce using rule 42 (seenfactor -> .)
    AND             reduce using rule 42 (seenfactor -> .)
    PLUS            reduce using rule 42 (seenfactor -> .)
    MINUS           reduce using rule 42 (seenfactor -> .)
    OR              reduce using rule 42 (seenfactor -> .)
    LESS_THAN       reduce using rule 42 (seenfactor -> .)
    LESS_THAN_EQUALS reduce using rule 42 (seenfactor -> .)
    GREATER_THAN    reduce using rule 42 (seenfactor -> .)
    GREATER_THAN_EQUALS reduce using rule 42 (seenfactor -> .)
    NOT_EQUALS      reduce using rule 42 (seenfactor -> .)
    EQUALS          reduce using rule 42 (seenfactor -> .)
    SEMICOLON       reduce using rule 42 (seenfactor -> .)
    RPAREN          reduce using rule 42 (seenfactor -> .)

    seenfactor                     shift and go to state 60

state 43

    (44) factor -> const .

    MULTIPLY        reduce using rule 44 (factor -> const .)
    DIV             reduce using rule 44 (factor -> const .)
    DIVIDE          reduce using rule 44 (factor -> const .)
    MOD             reduce using rule 44 (factor -> const .)
    AND             reduce using rule 44 (factor -> const .)
    PLUS            reduce using rule 44 (factor -> const .)
    MINUS           reduce using rule 44 (factor -> const .)
    OR              reduce using rule 44 (factor -> const .)
    LESS_THAN       reduce using rule 44 (factor -> const .)
    LESS_THAN_EQUALS reduce using rule 44 (factor -> const .)
    GREATER_THAN    reduce using rule 44 (factor -> const .)
    GREATER_THAN_EQUALS reduce using rule 44 (factor -> const .)
    NOT_EQUALS      reduce using rule 44 (factor -> const .)
    EQUALS          reduce using rule 44 (factor -> const .)
    SEMICOLON       reduce using rule 44 (factor -> const .)
    RPAREN          reduce using rule 44 (factor -> const .)


state 44

    (45) factor -> LPAREN . expression RPAREN
    (21) expression -> . simpleexpression
    (22) expression -> . simpleexpression LESS_THAN seenoperator simpleexpression genquad
    (23) expression -> . simpleexpression LESS_THAN_EQUALS seenoperator simpleexpression genquad
    (24) expression -> . simpleexpression GREATER_THAN seenoperator simpleexpression genquad
    (25) expression -> . simpleexpression GREATER_THAN_EQUALS seenoperator simpleexpression genquad
    (26) expression -> . simpleexpression NOT_EQUALS seenoperator simpleexpression genquad
    (27) expression -> . simpleexpression EQUALS seenoperator simpleexpression genquad
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    expression                     shift and go to state 61
    simpleexpression               shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 45

    (46) const -> PLUS . IDENTIFIER
    (49) const -> PLUS . NUMBER_CONST

    IDENTIFIER      shift and go to state 62
    NUMBER_CONST    shift and go to state 63


state 46

    (47) const -> MINUS . IDENTIFIER
    (50) const -> MINUS . NUMBER_CONST

    IDENTIFIER      shift and go to state 64
    NUMBER_CONST    shift and go to state 65


state 47

    (51) const -> NUMBER_CONST .

    MULTIPLY        reduce using rule 51 (const -> NUMBER_CONST .)
    DIV             reduce using rule 51 (const -> NUMBER_CONST .)
    DIVIDE          reduce using rule 51 (const -> NUMBER_CONST .)
    MOD             reduce using rule 51 (const -> NUMBER_CONST .)
    AND             reduce using rule 51 (const -> NUMBER_CONST .)
    PLUS            reduce using rule 51 (const -> NUMBER_CONST .)
    MINUS           reduce using rule 51 (const -> NUMBER_CONST .)
    OR              reduce using rule 51 (const -> NUMBER_CONST .)
    LESS_THAN       reduce using rule 51 (const -> NUMBER_CONST .)
    LESS_THAN_EQUALS reduce using rule 51 (const -> NUMBER_CONST .)
    GREATER_THAN    reduce using rule 51 (const -> NUMBER_CONST .)
    GREATER_THAN_EQUALS reduce using rule 51 (const -> NUMBER_CONST .)
    NOT_EQUALS      reduce using rule 51 (const -> NUMBER_CONST .)
    EQUALS          reduce using rule 51 (const -> NUMBER_CONST .)
    SEMICOLON       reduce using rule 51 (const -> NUMBER_CONST .)
    RPAREN          reduce using rule 51 (const -> NUMBER_CONST .)


state 48

    (52) const -> STRING_CONST .

    MULTIPLY        reduce using rule 52 (const -> STRING_CONST .)
    DIV             reduce using rule 52 (const -> STRING_CONST .)
    DIVIDE          reduce using rule 52 (const -> STRING_CONST .)
    MOD             reduce using rule 52 (const -> STRING_CONST .)
    AND             reduce using rule 52 (const -> STRING_CONST .)
    PLUS            reduce using rule 52 (const -> STRING_CONST .)
    MINUS           reduce using rule 52 (const -> STRING_CONST .)
    OR              reduce using rule 52 (const -> STRING_CONST .)
    LESS_THAN       reduce using rule 52 (const -> STRING_CONST .)
    LESS_THAN_EQUALS reduce using rule 52 (const -> STRING_CONST .)
    GREATER_THAN    reduce using rule 52 (const -> STRING_CONST .)
    GREATER_THAN_EQUALS reduce using rule 52 (const -> STRING_CONST .)
    NOT_EQUALS      reduce using rule 52 (const -> STRING_CONST .)
    EQUALS          reduce using rule 52 (const -> STRING_CONST .)
    SEMICOLON       reduce using rule 52 (const -> STRING_CONST .)
    RPAREN          reduce using rule 52 (const -> STRING_CONST .)


state 49

    (53) writefunction -> PRINT LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 66


state 50

    (54) writefunction -> WRITE LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 67


state 51

    (2) vars -> VAR varsp COLON type seentype SEMICOLON .
    (3) vars -> VAR varsp COLON type seentype SEMICOLON . vars
    (2) vars -> . VAR varsp COLON type seentype SEMICOLON
    (3) vars -> . VAR varsp COLON type seentype SEMICOLON vars
    (4) vars -> . empty
    (55) empty -> .

  ! reduce/reduce conflict for BEGIN resolved using rule 2 (vars -> VAR varsp COLON type seentype SEMICOLON .)
    BEGIN           reduce using rule 2 (vars -> VAR varsp COLON type seentype SEMICOLON .)
    VAR             shift and go to state 6

  ! BEGIN           [ reduce using rule 55 (empty -> .) ]

    vars                           shift and go to state 68
    empty                          shift and go to state 7

state 52

    (19) assign -> IDENTIFIER ASSIGNOP expression assignnow . SEMICOLON

    SEMICOLON       shift and go to state 69


state 53

    (22) expression -> simpleexpression LESS_THAN . seenoperator simpleexpression genquad
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 70

state 54

    (23) expression -> simpleexpression LESS_THAN_EQUALS . seenoperator simpleexpression genquad
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 71

state 55

    (24) expression -> simpleexpression GREATER_THAN . seenoperator simpleexpression genquad
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 72

state 56

    (25) expression -> simpleexpression GREATER_THAN_EQUALS . seenoperator simpleexpression genquad
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 73

state 57

    (26) expression -> simpleexpression NOT_EQUALS . seenoperator simpleexpression genquad
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 74

state 58

    (27) expression -> simpleexpression EQUALS . seenoperator simpleexpression genquad
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 75

state 59

    (28) simpleexpression -> term seenterm . simpleexpressionp
    (30) simpleexpressionp -> . empty
    (31) simpleexpressionp -> . PLUS seenoperator simpleexpression
    (32) simpleexpressionp -> . MINUS seenoperator simpleexpression
    (33) simpleexpressionp -> . OR seenoperator simpleexpression
    (55) empty -> .

    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    OR              shift and go to state 80
    LESS_THAN       reduce using rule 55 (empty -> .)
    LESS_THAN_EQUALS reduce using rule 55 (empty -> .)
    GREATER_THAN    reduce using rule 55 (empty -> .)
    GREATER_THAN_EQUALS reduce using rule 55 (empty -> .)
    NOT_EQUALS      reduce using rule 55 (empty -> .)
    EQUALS          reduce using rule 55 (empty -> .)
    SEMICOLON       reduce using rule 55 (empty -> .)
    RPAREN          reduce using rule 55 (empty -> .)

    simpleexpressionp              shift and go to state 76
    empty                          shift and go to state 77

state 60

    (34) term -> factor seenfactor . termp
    (35) termp -> . empty
    (36) termp -> . MULTIPLY seenoperator term
    (37) termp -> . DIV seenoperator term
    (38) termp -> . DIVIDE seenoperator term
    (39) termp -> . MOD seenoperator term
    (40) termp -> . AND seenoperator term
    (55) empty -> .

    MULTIPLY        shift and go to state 83
    DIV             shift and go to state 84
    DIVIDE          shift and go to state 85
    MOD             shift and go to state 86
    AND             shift and go to state 87
    PLUS            reduce using rule 55 (empty -> .)
    MINUS           reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    LESS_THAN       reduce using rule 55 (empty -> .)
    LESS_THAN_EQUALS reduce using rule 55 (empty -> .)
    GREATER_THAN    reduce using rule 55 (empty -> .)
    GREATER_THAN_EQUALS reduce using rule 55 (empty -> .)
    NOT_EQUALS      reduce using rule 55 (empty -> .)
    EQUALS          reduce using rule 55 (empty -> .)
    SEMICOLON       reduce using rule 55 (empty -> .)
    RPAREN          reduce using rule 55 (empty -> .)

    termp                          shift and go to state 81
    empty                          shift and go to state 82

state 61

    (45) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 88


state 62

    (46) const -> PLUS IDENTIFIER .

    MULTIPLY        reduce using rule 46 (const -> PLUS IDENTIFIER .)
    DIV             reduce using rule 46 (const -> PLUS IDENTIFIER .)
    DIVIDE          reduce using rule 46 (const -> PLUS IDENTIFIER .)
    MOD             reduce using rule 46 (const -> PLUS IDENTIFIER .)
    AND             reduce using rule 46 (const -> PLUS IDENTIFIER .)
    PLUS            reduce using rule 46 (const -> PLUS IDENTIFIER .)
    MINUS           reduce using rule 46 (const -> PLUS IDENTIFIER .)
    OR              reduce using rule 46 (const -> PLUS IDENTIFIER .)
    LESS_THAN       reduce using rule 46 (const -> PLUS IDENTIFIER .)
    LESS_THAN_EQUALS reduce using rule 46 (const -> PLUS IDENTIFIER .)
    GREATER_THAN    reduce using rule 46 (const -> PLUS IDENTIFIER .)
    GREATER_THAN_EQUALS reduce using rule 46 (const -> PLUS IDENTIFIER .)
    NOT_EQUALS      reduce using rule 46 (const -> PLUS IDENTIFIER .)
    EQUALS          reduce using rule 46 (const -> PLUS IDENTIFIER .)
    SEMICOLON       reduce using rule 46 (const -> PLUS IDENTIFIER .)
    RPAREN          reduce using rule 46 (const -> PLUS IDENTIFIER .)


state 63

    (49) const -> PLUS NUMBER_CONST .

    MULTIPLY        reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    DIV             reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    DIVIDE          reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    MOD             reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    AND             reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    PLUS            reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    MINUS           reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    OR              reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    LESS_THAN       reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    LESS_THAN_EQUALS reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    GREATER_THAN    reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    GREATER_THAN_EQUALS reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    NOT_EQUALS      reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    EQUALS          reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    SEMICOLON       reduce using rule 49 (const -> PLUS NUMBER_CONST .)
    RPAREN          reduce using rule 49 (const -> PLUS NUMBER_CONST .)


state 64

    (47) const -> MINUS IDENTIFIER .

    MULTIPLY        reduce using rule 47 (const -> MINUS IDENTIFIER .)
    DIV             reduce using rule 47 (const -> MINUS IDENTIFIER .)
    DIVIDE          reduce using rule 47 (const -> MINUS IDENTIFIER .)
    MOD             reduce using rule 47 (const -> MINUS IDENTIFIER .)
    AND             reduce using rule 47 (const -> MINUS IDENTIFIER .)
    PLUS            reduce using rule 47 (const -> MINUS IDENTIFIER .)
    MINUS           reduce using rule 47 (const -> MINUS IDENTIFIER .)
    OR              reduce using rule 47 (const -> MINUS IDENTIFIER .)
    LESS_THAN       reduce using rule 47 (const -> MINUS IDENTIFIER .)
    LESS_THAN_EQUALS reduce using rule 47 (const -> MINUS IDENTIFIER .)
    GREATER_THAN    reduce using rule 47 (const -> MINUS IDENTIFIER .)
    GREATER_THAN_EQUALS reduce using rule 47 (const -> MINUS IDENTIFIER .)
    NOT_EQUALS      reduce using rule 47 (const -> MINUS IDENTIFIER .)
    EQUALS          reduce using rule 47 (const -> MINUS IDENTIFIER .)
    SEMICOLON       reduce using rule 47 (const -> MINUS IDENTIFIER .)
    RPAREN          reduce using rule 47 (const -> MINUS IDENTIFIER .)


state 65

    (50) const -> MINUS NUMBER_CONST .

    MULTIPLY        reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    DIV             reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    DIVIDE          reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    MOD             reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    AND             reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    PLUS            reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    MINUS           reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    OR              reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    LESS_THAN       reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    LESS_THAN_EQUALS reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    GREATER_THAN    reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    GREATER_THAN_EQUALS reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    NOT_EQUALS      reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    EQUALS          reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    SEMICOLON       reduce using rule 50 (const -> MINUS NUMBER_CONST .)
    RPAREN          reduce using rule 50 (const -> MINUS NUMBER_CONST .)


state 66

    (53) writefunction -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 89


state 67

    (54) writefunction -> WRITE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 90


state 68

    (3) vars -> VAR varsp COLON type seentype SEMICOLON vars .

    BEGIN           reduce using rule 3 (vars -> VAR varsp COLON type seentype SEMICOLON vars .)


state 69

    (19) assign -> IDENTIFIER ASSIGNOP expression assignnow SEMICOLON .

    IDENTIFIER      reduce using rule 19 (assign -> IDENTIFIER ASSIGNOP expression assignnow SEMICOLON .)
    PRINT           reduce using rule 19 (assign -> IDENTIFIER ASSIGNOP expression assignnow SEMICOLON .)
    WRITE           reduce using rule 19 (assign -> IDENTIFIER ASSIGNOP expression assignnow SEMICOLON .)
    END             reduce using rule 19 (assign -> IDENTIFIER ASSIGNOP expression assignnow SEMICOLON .)


state 70

    (22) expression -> simpleexpression LESS_THAN seenoperator . simpleexpression genquad
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    simpleexpression               shift and go to state 91
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 71

    (23) expression -> simpleexpression LESS_THAN_EQUALS seenoperator . simpleexpression genquad
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    simpleexpression               shift and go to state 92
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 72

    (24) expression -> simpleexpression GREATER_THAN seenoperator . simpleexpression genquad
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    simpleexpression               shift and go to state 93
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 73

    (25) expression -> simpleexpression GREATER_THAN_EQUALS seenoperator . simpleexpression genquad
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    simpleexpression               shift and go to state 94
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 74

    (26) expression -> simpleexpression NOT_EQUALS seenoperator . simpleexpression genquad
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    simpleexpression               shift and go to state 95
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 75

    (27) expression -> simpleexpression EQUALS seenoperator . simpleexpression genquad
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    simpleexpression               shift and go to state 96
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 76

    (28) simpleexpression -> term seenterm simpleexpressionp .

    LESS_THAN       reduce using rule 28 (simpleexpression -> term seenterm simpleexpressionp .)
    LESS_THAN_EQUALS reduce using rule 28 (simpleexpression -> term seenterm simpleexpressionp .)
    GREATER_THAN    reduce using rule 28 (simpleexpression -> term seenterm simpleexpressionp .)
    GREATER_THAN_EQUALS reduce using rule 28 (simpleexpression -> term seenterm simpleexpressionp .)
    NOT_EQUALS      reduce using rule 28 (simpleexpression -> term seenterm simpleexpressionp .)
    EQUALS          reduce using rule 28 (simpleexpression -> term seenterm simpleexpressionp .)
    SEMICOLON       reduce using rule 28 (simpleexpression -> term seenterm simpleexpressionp .)
    RPAREN          reduce using rule 28 (simpleexpression -> term seenterm simpleexpressionp .)


state 77

    (30) simpleexpressionp -> empty .

    LESS_THAN       reduce using rule 30 (simpleexpressionp -> empty .)
    LESS_THAN_EQUALS reduce using rule 30 (simpleexpressionp -> empty .)
    GREATER_THAN    reduce using rule 30 (simpleexpressionp -> empty .)
    GREATER_THAN_EQUALS reduce using rule 30 (simpleexpressionp -> empty .)
    NOT_EQUALS      reduce using rule 30 (simpleexpressionp -> empty .)
    EQUALS          reduce using rule 30 (simpleexpressionp -> empty .)
    SEMICOLON       reduce using rule 30 (simpleexpressionp -> empty .)
    RPAREN          reduce using rule 30 (simpleexpressionp -> empty .)


state 78

    (31) simpleexpressionp -> PLUS . seenoperator simpleexpression
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 97

state 79

    (32) simpleexpressionp -> MINUS . seenoperator simpleexpression
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 98

state 80

    (33) simpleexpressionp -> OR . seenoperator simpleexpression
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 99

state 81

    (34) term -> factor seenfactor termp .

    PLUS            reduce using rule 34 (term -> factor seenfactor termp .)
    MINUS           reduce using rule 34 (term -> factor seenfactor termp .)
    OR              reduce using rule 34 (term -> factor seenfactor termp .)
    LESS_THAN       reduce using rule 34 (term -> factor seenfactor termp .)
    LESS_THAN_EQUALS reduce using rule 34 (term -> factor seenfactor termp .)
    GREATER_THAN    reduce using rule 34 (term -> factor seenfactor termp .)
    GREATER_THAN_EQUALS reduce using rule 34 (term -> factor seenfactor termp .)
    NOT_EQUALS      reduce using rule 34 (term -> factor seenfactor termp .)
    EQUALS          reduce using rule 34 (term -> factor seenfactor termp .)
    SEMICOLON       reduce using rule 34 (term -> factor seenfactor termp .)
    RPAREN          reduce using rule 34 (term -> factor seenfactor termp .)


state 82

    (35) termp -> empty .

    PLUS            reduce using rule 35 (termp -> empty .)
    MINUS           reduce using rule 35 (termp -> empty .)
    OR              reduce using rule 35 (termp -> empty .)
    LESS_THAN       reduce using rule 35 (termp -> empty .)
    LESS_THAN_EQUALS reduce using rule 35 (termp -> empty .)
    GREATER_THAN    reduce using rule 35 (termp -> empty .)
    GREATER_THAN_EQUALS reduce using rule 35 (termp -> empty .)
    NOT_EQUALS      reduce using rule 35 (termp -> empty .)
    EQUALS          reduce using rule 35 (termp -> empty .)
    SEMICOLON       reduce using rule 35 (termp -> empty .)
    RPAREN          reduce using rule 35 (termp -> empty .)


state 83

    (36) termp -> MULTIPLY . seenoperator term
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 100

state 84

    (37) termp -> DIV . seenoperator term
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 101

state 85

    (38) termp -> DIVIDE . seenoperator term
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 102

state 86

    (39) termp -> MOD . seenoperator term
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 103

state 87

    (40) termp -> AND . seenoperator term
    (41) seenoperator -> .

    LPAREN          reduce using rule 41 (seenoperator -> .)
    PLUS            reduce using rule 41 (seenoperator -> .)
    MINUS           reduce using rule 41 (seenoperator -> .)
    IDENTIFIER      reduce using rule 41 (seenoperator -> .)
    NUMBER_CONST    reduce using rule 41 (seenoperator -> .)
    STRING_CONST    reduce using rule 41 (seenoperator -> .)

    seenoperator                   shift and go to state 104

state 88

    (45) factor -> LPAREN expression RPAREN .

    MULTIPLY        reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    LESS_THAN_EQUALS reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    GREATER_THAN_EQUALS reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    NOT_EQUALS      reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 45 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 45 (factor -> LPAREN expression RPAREN .)


state 89

    (53) writefunction -> PRINT LPAREN expression RPAREN SEMICOLON .

    IDENTIFIER      reduce using rule 53 (writefunction -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 53 (writefunction -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WRITE           reduce using rule 53 (writefunction -> PRINT LPAREN expression RPAREN SEMICOLON .)
    END             reduce using rule 53 (writefunction -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 90

    (54) writefunction -> WRITE LPAREN expression RPAREN SEMICOLON .

    IDENTIFIER      reduce using rule 54 (writefunction -> WRITE LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 54 (writefunction -> WRITE LPAREN expression RPAREN SEMICOLON .)
    WRITE           reduce using rule 54 (writefunction -> WRITE LPAREN expression RPAREN SEMICOLON .)
    END             reduce using rule 54 (writefunction -> WRITE LPAREN expression RPAREN SEMICOLON .)


state 91

    (22) expression -> simpleexpression LESS_THAN seenoperator simpleexpression . genquad
    (43) genquad -> .

    SEMICOLON       reduce using rule 43 (genquad -> .)
    RPAREN          reduce using rule 43 (genquad -> .)

    genquad                        shift and go to state 105

state 92

    (23) expression -> simpleexpression LESS_THAN_EQUALS seenoperator simpleexpression . genquad
    (43) genquad -> .

    SEMICOLON       reduce using rule 43 (genquad -> .)
    RPAREN          reduce using rule 43 (genquad -> .)

    genquad                        shift and go to state 106

state 93

    (24) expression -> simpleexpression GREATER_THAN seenoperator simpleexpression . genquad
    (43) genquad -> .

    SEMICOLON       reduce using rule 43 (genquad -> .)
    RPAREN          reduce using rule 43 (genquad -> .)

    genquad                        shift and go to state 107

state 94

    (25) expression -> simpleexpression GREATER_THAN_EQUALS seenoperator simpleexpression . genquad
    (43) genquad -> .

    SEMICOLON       reduce using rule 43 (genquad -> .)
    RPAREN          reduce using rule 43 (genquad -> .)

    genquad                        shift and go to state 108

state 95

    (26) expression -> simpleexpression NOT_EQUALS seenoperator simpleexpression . genquad
    (43) genquad -> .

    SEMICOLON       reduce using rule 43 (genquad -> .)
    RPAREN          reduce using rule 43 (genquad -> .)

    genquad                        shift and go to state 109

state 96

    (27) expression -> simpleexpression EQUALS seenoperator simpleexpression . genquad
    (43) genquad -> .

    SEMICOLON       reduce using rule 43 (genquad -> .)
    RPAREN          reduce using rule 43 (genquad -> .)

    genquad                        shift and go to state 110

state 97

    (31) simpleexpressionp -> PLUS seenoperator . simpleexpression
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    simpleexpression               shift and go to state 111
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 98

    (32) simpleexpressionp -> MINUS seenoperator . simpleexpression
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    simpleexpression               shift and go to state 112
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 99

    (33) simpleexpressionp -> OR seenoperator . simpleexpression
    (28) simpleexpression -> . term seenterm simpleexpressionp
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    simpleexpression               shift and go to state 113
    term                           shift and go to state 41
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 100

    (36) termp -> MULTIPLY seenoperator . term
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    term                           shift and go to state 114
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 101

    (37) termp -> DIV seenoperator . term
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    term                           shift and go to state 115
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 102

    (38) termp -> DIVIDE seenoperator . term
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    term                           shift and go to state 116
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 103

    (39) termp -> MOD seenoperator . term
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    term                           shift and go to state 117
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 104

    (40) termp -> AND seenoperator . term
    (34) term -> . factor seenfactor termp
    (44) factor -> . const
    (45) factor -> . LPAREN expression RPAREN
    (46) const -> . PLUS IDENTIFIER
    (47) const -> . MINUS IDENTIFIER
    (48) const -> . IDENTIFIER
    (49) const -> . PLUS NUMBER_CONST
    (50) const -> . MINUS NUMBER_CONST
    (51) const -> . NUMBER_CONST
    (52) const -> . STRING_CONST

    LPAREN          shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    IDENTIFIER      shift and go to state 38
    NUMBER_CONST    shift and go to state 47
    STRING_CONST    shift and go to state 48

    term                           shift and go to state 118
    factor                         shift and go to state 42
    const                          shift and go to state 43

state 105

    (22) expression -> simpleexpression LESS_THAN seenoperator simpleexpression genquad .

    SEMICOLON       reduce using rule 22 (expression -> simpleexpression LESS_THAN seenoperator simpleexpression genquad .)
    RPAREN          reduce using rule 22 (expression -> simpleexpression LESS_THAN seenoperator simpleexpression genquad .)


state 106

    (23) expression -> simpleexpression LESS_THAN_EQUALS seenoperator simpleexpression genquad .

    SEMICOLON       reduce using rule 23 (expression -> simpleexpression LESS_THAN_EQUALS seenoperator simpleexpression genquad .)
    RPAREN          reduce using rule 23 (expression -> simpleexpression LESS_THAN_EQUALS seenoperator simpleexpression genquad .)


state 107

    (24) expression -> simpleexpression GREATER_THAN seenoperator simpleexpression genquad .

    SEMICOLON       reduce using rule 24 (expression -> simpleexpression GREATER_THAN seenoperator simpleexpression genquad .)
    RPAREN          reduce using rule 24 (expression -> simpleexpression GREATER_THAN seenoperator simpleexpression genquad .)


state 108

    (25) expression -> simpleexpression GREATER_THAN_EQUALS seenoperator simpleexpression genquad .

    SEMICOLON       reduce using rule 25 (expression -> simpleexpression GREATER_THAN_EQUALS seenoperator simpleexpression genquad .)
    RPAREN          reduce using rule 25 (expression -> simpleexpression GREATER_THAN_EQUALS seenoperator simpleexpression genquad .)


state 109

    (26) expression -> simpleexpression NOT_EQUALS seenoperator simpleexpression genquad .

    SEMICOLON       reduce using rule 26 (expression -> simpleexpression NOT_EQUALS seenoperator simpleexpression genquad .)
    RPAREN          reduce using rule 26 (expression -> simpleexpression NOT_EQUALS seenoperator simpleexpression genquad .)


state 110

    (27) expression -> simpleexpression EQUALS seenoperator simpleexpression genquad .

    SEMICOLON       reduce using rule 27 (expression -> simpleexpression EQUALS seenoperator simpleexpression genquad .)
    RPAREN          reduce using rule 27 (expression -> simpleexpression EQUALS seenoperator simpleexpression genquad .)


state 111

    (31) simpleexpressionp -> PLUS seenoperator simpleexpression .

    LESS_THAN       reduce using rule 31 (simpleexpressionp -> PLUS seenoperator simpleexpression .)
    LESS_THAN_EQUALS reduce using rule 31 (simpleexpressionp -> PLUS seenoperator simpleexpression .)
    GREATER_THAN    reduce using rule 31 (simpleexpressionp -> PLUS seenoperator simpleexpression .)
    GREATER_THAN_EQUALS reduce using rule 31 (simpleexpressionp -> PLUS seenoperator simpleexpression .)
    NOT_EQUALS      reduce using rule 31 (simpleexpressionp -> PLUS seenoperator simpleexpression .)
    EQUALS          reduce using rule 31 (simpleexpressionp -> PLUS seenoperator simpleexpression .)
    SEMICOLON       reduce using rule 31 (simpleexpressionp -> PLUS seenoperator simpleexpression .)
    RPAREN          reduce using rule 31 (simpleexpressionp -> PLUS seenoperator simpleexpression .)


state 112

    (32) simpleexpressionp -> MINUS seenoperator simpleexpression .

    LESS_THAN       reduce using rule 32 (simpleexpressionp -> MINUS seenoperator simpleexpression .)
    LESS_THAN_EQUALS reduce using rule 32 (simpleexpressionp -> MINUS seenoperator simpleexpression .)
    GREATER_THAN    reduce using rule 32 (simpleexpressionp -> MINUS seenoperator simpleexpression .)
    GREATER_THAN_EQUALS reduce using rule 32 (simpleexpressionp -> MINUS seenoperator simpleexpression .)
    NOT_EQUALS      reduce using rule 32 (simpleexpressionp -> MINUS seenoperator simpleexpression .)
    EQUALS          reduce using rule 32 (simpleexpressionp -> MINUS seenoperator simpleexpression .)
    SEMICOLON       reduce using rule 32 (simpleexpressionp -> MINUS seenoperator simpleexpression .)
    RPAREN          reduce using rule 32 (simpleexpressionp -> MINUS seenoperator simpleexpression .)


state 113

    (33) simpleexpressionp -> OR seenoperator simpleexpression .

    LESS_THAN       reduce using rule 33 (simpleexpressionp -> OR seenoperator simpleexpression .)
    LESS_THAN_EQUALS reduce using rule 33 (simpleexpressionp -> OR seenoperator simpleexpression .)
    GREATER_THAN    reduce using rule 33 (simpleexpressionp -> OR seenoperator simpleexpression .)
    GREATER_THAN_EQUALS reduce using rule 33 (simpleexpressionp -> OR seenoperator simpleexpression .)
    NOT_EQUALS      reduce using rule 33 (simpleexpressionp -> OR seenoperator simpleexpression .)
    EQUALS          reduce using rule 33 (simpleexpressionp -> OR seenoperator simpleexpression .)
    SEMICOLON       reduce using rule 33 (simpleexpressionp -> OR seenoperator simpleexpression .)
    RPAREN          reduce using rule 33 (simpleexpressionp -> OR seenoperator simpleexpression .)


state 114

    (36) termp -> MULTIPLY seenoperator term .

    PLUS            reduce using rule 36 (termp -> MULTIPLY seenoperator term .)
    MINUS           reduce using rule 36 (termp -> MULTIPLY seenoperator term .)
    OR              reduce using rule 36 (termp -> MULTIPLY seenoperator term .)
    LESS_THAN       reduce using rule 36 (termp -> MULTIPLY seenoperator term .)
    LESS_THAN_EQUALS reduce using rule 36 (termp -> MULTIPLY seenoperator term .)
    GREATER_THAN    reduce using rule 36 (termp -> MULTIPLY seenoperator term .)
    GREATER_THAN_EQUALS reduce using rule 36 (termp -> MULTIPLY seenoperator term .)
    NOT_EQUALS      reduce using rule 36 (termp -> MULTIPLY seenoperator term .)
    EQUALS          reduce using rule 36 (termp -> MULTIPLY seenoperator term .)
    SEMICOLON       reduce using rule 36 (termp -> MULTIPLY seenoperator term .)
    RPAREN          reduce using rule 36 (termp -> MULTIPLY seenoperator term .)


state 115

    (37) termp -> DIV seenoperator term .

    PLUS            reduce using rule 37 (termp -> DIV seenoperator term .)
    MINUS           reduce using rule 37 (termp -> DIV seenoperator term .)
    OR              reduce using rule 37 (termp -> DIV seenoperator term .)
    LESS_THAN       reduce using rule 37 (termp -> DIV seenoperator term .)
    LESS_THAN_EQUALS reduce using rule 37 (termp -> DIV seenoperator term .)
    GREATER_THAN    reduce using rule 37 (termp -> DIV seenoperator term .)
    GREATER_THAN_EQUALS reduce using rule 37 (termp -> DIV seenoperator term .)
    NOT_EQUALS      reduce using rule 37 (termp -> DIV seenoperator term .)
    EQUALS          reduce using rule 37 (termp -> DIV seenoperator term .)
    SEMICOLON       reduce using rule 37 (termp -> DIV seenoperator term .)
    RPAREN          reduce using rule 37 (termp -> DIV seenoperator term .)


state 116

    (38) termp -> DIVIDE seenoperator term .

    PLUS            reduce using rule 38 (termp -> DIVIDE seenoperator term .)
    MINUS           reduce using rule 38 (termp -> DIVIDE seenoperator term .)
    OR              reduce using rule 38 (termp -> DIVIDE seenoperator term .)
    LESS_THAN       reduce using rule 38 (termp -> DIVIDE seenoperator term .)
    LESS_THAN_EQUALS reduce using rule 38 (termp -> DIVIDE seenoperator term .)
    GREATER_THAN    reduce using rule 38 (termp -> DIVIDE seenoperator term .)
    GREATER_THAN_EQUALS reduce using rule 38 (termp -> DIVIDE seenoperator term .)
    NOT_EQUALS      reduce using rule 38 (termp -> DIVIDE seenoperator term .)
    EQUALS          reduce using rule 38 (termp -> DIVIDE seenoperator term .)
    SEMICOLON       reduce using rule 38 (termp -> DIVIDE seenoperator term .)
    RPAREN          reduce using rule 38 (termp -> DIVIDE seenoperator term .)


state 117

    (39) termp -> MOD seenoperator term .

    PLUS            reduce using rule 39 (termp -> MOD seenoperator term .)
    MINUS           reduce using rule 39 (termp -> MOD seenoperator term .)
    OR              reduce using rule 39 (termp -> MOD seenoperator term .)
    LESS_THAN       reduce using rule 39 (termp -> MOD seenoperator term .)
    LESS_THAN_EQUALS reduce using rule 39 (termp -> MOD seenoperator term .)
    GREATER_THAN    reduce using rule 39 (termp -> MOD seenoperator term .)
    GREATER_THAN_EQUALS reduce using rule 39 (termp -> MOD seenoperator term .)
    NOT_EQUALS      reduce using rule 39 (termp -> MOD seenoperator term .)
    EQUALS          reduce using rule 39 (termp -> MOD seenoperator term .)
    SEMICOLON       reduce using rule 39 (termp -> MOD seenoperator term .)
    RPAREN          reduce using rule 39 (termp -> MOD seenoperator term .)


state 118

    (40) termp -> AND seenoperator term .

    PLUS            reduce using rule 40 (termp -> AND seenoperator term .)
    MINUS           reduce using rule 40 (termp -> AND seenoperator term .)
    OR              reduce using rule 40 (termp -> AND seenoperator term .)
    LESS_THAN       reduce using rule 40 (termp -> AND seenoperator term .)
    LESS_THAN_EQUALS reduce using rule 40 (termp -> AND seenoperator term .)
    GREATER_THAN    reduce using rule 40 (termp -> AND seenoperator term .)
    GREATER_THAN_EQUALS reduce using rule 40 (termp -> AND seenoperator term .)
    NOT_EQUALS      reduce using rule 40 (termp -> AND seenoperator term .)
    EQUALS          reduce using rule 40 (termp -> AND seenoperator term .)
    SEMICOLON       reduce using rule 40 (termp -> AND seenoperator term .)
    RPAREN          reduce using rule 40 (termp -> AND seenoperator term .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 18 resolved using rule (statement -> assign)
WARNING: rejected rule (empty -> <empty>) in state 18
WARNING: reduce/reduce conflict in state 19 resolved using rule (statement -> writefunction)
WARNING: rejected rule (empty -> <empty>) in state 19
WARNING: reduce/reduce conflict in state 51 resolved using rule (vars -> VAR varsp COLON type seentype SEMICOLON)
WARNING: rejected rule (empty -> <empty>) in state 51
